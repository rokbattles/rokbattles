name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -Dwarnings

jobs:
  lint-ts:
    name: Lint TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Biome
        uses: biomejs/setup-biome@v2
        with:
          version: latest

      - name: Run Biome
        run: biome ci .

  test-ts:
    name: Test TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build @rokbattles/site
        run: pnpm -F @rokbattles/site build

      - name: Build @rokbattles/tauri
        run: pnpm -F @rokbattles/tauri build

  lint-rs:
    name: Lint Rust
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache Rust build
        uses: Swatinem/rust-cache@v2

      - name: rustfmt
        run: cargo fmt --all -- --check

      - name: clippy (all targets, all features)
        run: |
          cargo clippy --workspace --all-targets --all-features
          cargo clippy --workspace --all-targets --no-default-features

  test-rs:
    name: Test Rust (${{ matrix.os }} - ${{ matrix.toolchain }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        toolchain: [stable, nightly]
        include:
          - toolchain: nightly
            allow-failure: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install Rust
        id: toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}

      - name: Cache Rust build
        uses: Swatinem/rust-cache@v2

      - name: Build (default features)
        run: cargo build --workspace --all-targets --verbose

      - name: Build (no default features)
        run: cargo build --workspace --all-targets --no-default-features --verbose

      - name: Test (default features)
        run: cargo test --workspace --all-features --verbose

      - name: Test (no default features)
        run: cargo test --workspace --no-default-features --verbose

      - name: Allow nightly failures
        if: matrix.toolchain == 'nightly'
        continue-on-error: true
        run: echo "Nightly allowed to fail"
